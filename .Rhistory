axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
source("~/R/Div_Homework.R")
View(zoop)
write.csv(Your DataFrame,"Path to export the DataFrame\\File Name.csv", row.names = FALSE)
write.csv(Zoop,"Zoop.csv", row.names = FALSE)
write.csv(zoop,"Zoop.csv", row.names = FALSE)
zoop_1 <- read.csv("zoop_1.csv")
zoop_1 <- read.csv("zoop_1.csv")
ggplot(data = zoop_1, aes (y = Count, x = Site)) +
geom_point()  +
geom_line(aes(y=yD)) +
#Theme presets
theme_classic() + scale_fill_brewer(palette="Set3") +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Proportion of Chlorophyte Cover as a Function of Module Depth") +
xlab("Module Depth (m)")+
ylab("Proportion of Chlorophyte Cover")+
labs(colour = "Legend Title")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() + scale_fill_brewer(palette="Set3") +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Proportion of Chlorophyte Cover as a Function of Module Depth") +
xlab("Module Depth (m)")+
ylab("Proportion of Chlorophyte Cover")+
labs(colour = "Legend Title")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Species)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() + scale_fill_brewer(palette="Set3") +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Proportion of Chlorophyte Cover as a Function of Module Depth") +
xlab("Module Depth (m)")+
ylab("Proportion of Chlorophyte Cover")+
labs(colour = "Legend Title")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() + scale_fill_brewer(palette="Set3") +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Proportion of Chlorophyte Cover as a Function of Module Depth") +
xlab("Module Depth (m)")+
ylab("Proportion of Chlorophyte Cover")+
labs(colour = "Legend Title")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Proportion of Chlorophyte Cover as a Function of Module Depth") +
xlab("Module Depth (m)")+
ylab("Proportion of Chlorophyte Cover")+
labs(colour = "Legend Title")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
zoop_1 <- read.csv("zoop_1.csv")
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Proportion of Chlorophyte Cover as a Function of Module Depth") +
xlab("Module Depth (m)")+
ylab("Proportion of Chlorophyte Cover")+
labs(colour = "Legend Title")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Proportion of Chlorophyte Cover as a Function of Module Depth") +
xlab("Module Depth (m)")+
ylab("Proportion of Chlorophyte Cover")+
labs(colour = "Legend Title")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16, angle = 75),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
zoop_1 <- read.csv("zoop_1.csv")
zoop_1$Site <- factor(zoop_1$Site, levels = c("Scotian - Spring", "Damariscotta Estuary", "Scotian - Fall", "Wilkinson Basin"))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
zoop_1 <- read.csv("zoop_1.csv")
View(zoop_1)
zoop_1$Site <- factor(zoop_1$Site, levels = c("Scotian - Spring", "Damariscotta Estuary",
"Scotian - Fall", "Wilkinson Basin "))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="stack", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1, aes (y = Count, x = Site, fill = Family)) +
geom_bar(position="fill", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
zoop_1.cop <- subset(zoop_1, Family == "Copepod")
View(zoop_1.cop)
ggplot(data = zoop_1.cop, aes (y = Count, x = Site, fill = Species)) +
geom_bar(position="fill", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
zoop_1.cop$Genus <- word(zoop_1.cop$Species, 1)
ggplot(data = zoop_1.cop, aes (y = Count, x = Site, fill = Species)) +
geom_bar(position="fill", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
ggplot(data = zoop_1.cop, aes (y = Count, x = Site, fill = Genus)) +
geom_bar(position="fill", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Total Abundance of Zooplankton by Taxonomic Grouping") +
xlab("Site")+
ylab("Zooplankton Count")+
labs(fill = "Taxonomic Grouping")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
View(zoop_1.cop)
ggplot(data = zoop_1.cop, aes (y = Count, x = Site, fill = Genus)) +
geom_bar(position="fill", stat="identity") +
#Theme presets
theme_classic() +  #scale_colour_brewer(palette="Set1") +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Percent Abundance of Zooplankton by Genus") +
xlab("Site")+
ylab("Copepod Abundance (%)")+
labs(fill = "Genus")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_text (size=16),      #Plot title themese
axis.text.x  = element_text(size=10),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "right",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
library(shiny); runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('~/GitHub/Scallop-Bioeconomic-Analysis/Shiny_Bioeconomic_Model_V8.R')
library(shiny); runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('~/GitHub/Scallop-Bioeconomic-Analysis/Shiny_Dashboard_v4_cn.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('~/GitHub/Scallop-Bioeconomic-Analysis/Shiny_Bioeconomic_Model_V8.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
library(shiny); runApp('~/GitHub/Scallop-Bioeconomic-Analysis/Shiny_Bioeconomic_Modelv9.R')
setwd("~/GitHub/Scallop-Bioeconomic-Analysis")
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Model_V8.R')
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_VFinal.R")
install.packages(c("shiny", "shinydashboard", "readr", "tidyr", "lubridate", "DT", "shinyvalidate", "shinyBS", "zoo", "shinyjs", "readxl", "dplyr", "plyr", "hablar", "ggplot2", "treemapify", "openxlsx", "flextable", "grid", "magick"))
install.packages(c("cowplot", "tidyverse"))
library(shiny) # Shiny application
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_VFinal.R")
runApp('Shiny_Bioeconomic_Modelv9.R')
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_VFinal.R")
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_VFinal.R")
View(PL.Whole)
runApp('Shiny_Bioeconomic_Modelv9.R')
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_VFinal.R")
View(COG)
runApp('Shiny_Bioeconomic_Modelv9.R')
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(plt.List)
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(COG)
View(COP)
runApp('Shiny_Bioeconomic_Modelv9.R')
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(COG)
View(Primary.Parameter.Data)
View(COP)
View(Growth.Data)
`Harvest Year`
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(COP)
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(COP)
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
2268951.98/65850
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
runApp('Shiny_Bioeconomic_Modelv9.R')
View(COG)
View(FOC)
View(COG)
View(COG)
View(COP)
View(COP)
3552289.1+156676.6
508965.8-352289.1
cumsum(COP$`Individual Scallops`)
76562+76562
76562*8
2174274.7/689058
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(PL.add)
View(PL.Whole)
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(PL.Whole)
source("~/Scallop-Bioeconomic-Analysis/Bioeconomic_Model_V8.R")
View(COP)
runApp('Shiny_Bioeconomic_Modelv9.R')
16*7
